// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwagOverflowWPF.Data;

namespace SwagOverflowWPF.Migrations
{
    [DbContext(typeof(SwagContext))]
    [Migration("20200329033348_M2")]
    partial class M2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Display")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RootId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.HasIndex("AlternateId")
                        .IsUnique();

                    b.ToTable("SwagGroups");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SwagGroup");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Display")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupRootId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsExpanded")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueTypeString")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("AlternateId")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("GroupRootId")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("SwagItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SwagItem");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagDataTable", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagGroup");

                    b.Property<string>("Columns")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("SwagDataTable");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagSettingGroup", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagGroup");

                    b.HasDiscriminator().HasValue("SwagSettingGroup");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagDataRow", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagItem");

                    b.HasDiscriminator().HasValue("SwagDataRow");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagSetting", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagItem");

                    b.Property<string>("IconString")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconTypeString")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemsSource")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemsSourceTypeString")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("SwagSetting");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagWindowSettingGroup", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagSettingGroup");

                    b.HasDiscriminator().HasValue("SwagWindowSettingGroup");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagSettingBoolean", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagSetting");

                    b.HasDiscriminator().HasValue("SwagSettingBoolean");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagSettingString", b =>
                {
                    b.HasBaseType("SwagOverflowWPF.ViewModels.SwagSetting");

                    b.HasDiscriminator().HasValue("SwagSettingString");
                });

            modelBuilder.Entity("SwagOverflowWPF.ViewModels.SwagItem", b =>
                {
                    b.HasOne("SwagOverflowWPF.ViewModels.SwagGroup", "Group")
                        .WithMany("Descendants")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwagOverflowWPF.ViewModels.SwagGroup", "GroupRoot")
                        .WithOne("Root")
                        .HasForeignKey("SwagOverflowWPF.ViewModels.SwagItem", "GroupRootId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SwagOverflowWPF.ViewModels.SwagItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
