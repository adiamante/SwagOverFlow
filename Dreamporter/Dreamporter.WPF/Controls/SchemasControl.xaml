<swctl:SwagControlBase x:Class="Dreamporter.WPF.Controls.SchemasControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:di="clr-namespace:Dreamporter.Core;assembly=Dreamporter"
             xmlns:db="clr-namespace:Dreamporter.Core;assembly=Dreamporter"
             xmlns:dic="clr-namespace:Dreamporter.WPF.Controls"
             xmlns:svm="clr-namespace:SwagOverFlow.ViewModels;assembly=SwagOverFlow"
             xmlns:swctl="clr-namespace:SwagOverFlow.WPF.Controls;assembly=SwagOverFlow.WPF"
             xmlns:swvm="clr-namespace:SwagOverFlow.WPF.ViewModels;assembly=SwagOverFlow.WPF"
             xmlns:swui="clr-namespace:SwagOverFlow.WPF.UI;assembly=SwagOverFlow.WPF"
             xmlns:swcmd="clr-namespace:SwagOverFlow.WPF.Commands;assembly=SwagOverFlow.WPF"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common"
             xmlns:sc="clr-namespace:SwagOverFlow.Clients;assembly=SwagOverFlow"
             x:Name="ThisControl"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <swctl:SwagControlBase.Resources>
        <ContextMenu x:Key="SchemaContextMenu" 
                     Tag="{Binding PlacementTarget,
                     RelativeSource={RelativeSource Self},
                     Converter={swui:AncestorFindConverter},
                     ConverterParameter={x:Type swctl:SwagItemsControl}}"
                     swcmd:CommandBehavior.Event="Opened"
                     swcmd:CommandBehavior.Command="{Binding Tag.ItemContextMenuOpenedCommand, RelativeSource={RelativeSource Self}}"
                     swcmd:CommandBehavior.CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add" Command="{Binding Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemAddContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Add}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Generate Summary Query" Click="Schema_GenerateSummary_Click"
                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Sigma}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Copy" Command="{Binding Parent.Tag.CopyCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemCopyContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Clipboard}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste" Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.ClipboardPaste}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Export" Command="{Binding Parent.Tag.ExportCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemExportContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Export}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Import" Command="{Binding Parent.Tag.ImportCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemImportContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Import}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Command="{Binding Parent.Tag.RemoveCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemRemoveContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Close}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="TableContextMenu" 
                     Tag="{Binding PlacementTarget,
                     RelativeSource={RelativeSource Self},
                     Converter={swui:AncestorFindConverter},
                     ConverterParameter={x:Type swctl:SwagItemsControl}}"
                     swcmd:CommandBehavior.Event="Opened"
                     swcmd:CommandBehavior.Command="{Binding Tag.ItemContextMenuOpenedCommand, RelativeSource={RelativeSource Self}}"
                     swcmd:CommandBehavior.CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add" Command="{Binding Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemAddContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Add}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Generate CTE" Click="Table_GenerateCTE_Click"
                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.TableRefresh}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Copy" Command="{Binding Parent.Tag.CopyCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemCopyContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Clipboard}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste" Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.ClipboardPaste}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Export" Command="{Binding Parent.Tag.ExportCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemExportContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Export}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Import" Command="{Binding Parent.Tag.ImportCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemImportContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Import}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Command="{Binding Parent.Tag.RemoveCommand, RelativeSource={RelativeSource Self}}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                                  Visibility="{Binding Parent.Tag.ShowItemRemoveContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Close}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </swctl:SwagControlBase.Resources>
    <swctl:SwagItemsControl x:Name="SwagItemsControl" 
                            AllowDrop="True"
                            Drop="SwagItemsControl_Drop"
                            SwagItemsSource="{Binding Schemas, Mode=TwoWay, ElementName=ThisControl}" 
                            ShowSaveButton="{Binding ShowSaveButton, ElementName=ThisControl}"
                            Save="SwagItemsControl_Save"
                            Add="SwagItemsControl_Add"
                            Remove="SwagItemsControl_Remove"
                            ShowAddContextMenuItem="True"
                            ShowItemAddContextMenuItem="True"
                            UseDefaultClear="True"
                            ShowClearContextMenuItem="True"
                            ShowItemRemoveContextMenuItem="True"
                            SaveButtonHorizontalAlignment="Right"
                            SaveButtonVerticalAlignment="Bottom"
                            MinHeight="30">
        <swctl:SwagItemsControl.ItemContainerStyles>
            <swui:SwagStyleCollection>
                <swui:SwagStyle Type="{x:Type db:Schema}">
                    <swui:SwagStyle.Style>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="ContextMenu" Value="{StaticResource SchemaContextMenu}" />
                        </Style>
                    </swui:SwagStyle.Style>
                </swui:SwagStyle>
                <swui:SwagStyle Type="{x:Type db:SchemaTable}">
                    <swui:SwagStyle.Style>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="ContextMenu" Value="{StaticResource TableContextMenu}" />
                        </Style>
                    </swui:SwagStyle.Style>
                </swui:SwagStyle>
            </swui:SwagStyleCollection>
        </swctl:SwagItemsControl.ItemContainerStyles>
        <swctl:SwagItemsControl.ItemTemplates>
            <swui:SwagTemplateCollection>
                <swui:SwagTemplate Type="{x:Type db:Schema}">
                    <swui:SwagTemplate.DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type db:Schema}" ItemsSource="{Binding Tables}">
                            <DockPanel>
                                <swctl:IconControl DockPanel.Dock="Left" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseInformation}" />
                                <TextBox Text="{Binding Name}" MinWidth="100" />
                            </DockPanel>
                        </HierarchicalDataTemplate>
                    </swui:SwagTemplate.DataTemplate>
                </swui:SwagTemplate>
                <swui:SwagTemplate Type="{x:Type db:SchemaTable}">
                    <swui:SwagTemplate.DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type db:SchemaTable}" ItemsSource="{Binding Columns}">
                            <DockPanel>
                                <swctl:IconControl DockPanel.Dock="Left" Kind="{x:Static iconPacks:PackIconMaterialKind.Table}" />
                                <TextBox Text="{Binding Name}" MinWidth="100" />
                            </DockPanel>
                        </HierarchicalDataTemplate>
                    </swui:SwagTemplate.DataTemplate>
                </swui:SwagTemplate>
                <swui:SwagTemplate Type="{x:Type db:SchemaColumn}">
                    <swui:SwagTemplate.DataTemplate>
                        <DataTemplate DataType="{x:Type db:SchemaColumn}">
                            <StackPanel>
                                <DockPanel>
                                    <swctl:IconControl DockPanel.Dock="Left" Kind="{x:Static iconPacks:PackIconMaterialKind.TableColumn}" />
                                    <TextBox Text="{Binding Name}" MinWidth="100" />
                                </DockPanel>
                                <ComboBox SelectedValue="{Binding DataType}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type db:SchemaColumnDataType}}}" />
                            </StackPanel>
                        </DataTemplate>
                    </swui:SwagTemplate.DataTemplate>
                </swui:SwagTemplate>
            </swui:SwagTemplateCollection>
        </swctl:SwagItemsControl.ItemTemplates>
    </swctl:SwagItemsControl>
</swctl:SwagControlBase>
