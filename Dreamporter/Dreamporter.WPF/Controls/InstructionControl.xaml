<swctl:SwagControlBase x:Class="Dreamporter.WPF.Controls.InstructionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dc="clr-namespace:Dreamporter.Core;assembly=Dreamporter"
             xmlns:dwctl="clr-namespace:Dreamporter.WPF.Controls"
             xmlns:svm="clr-namespace:SwagOverFlow.ViewModels;assembly=SwagOverFlow"
             xmlns:swctl="clr-namespace:SwagOverFlow.WPF.Controls;assembly=SwagOverFlow.WPF"
             xmlns:swvm="clr-namespace:SwagOverFlow.WPF.ViewModels;assembly=SwagOverFlow.WPF"
             xmlns:swui="clr-namespace:SwagOverFlow.WPF.UI;assembly=SwagOverFlow.WPF"
             xmlns:swcmd="clr-namespace:SwagOverFlow.WPF.Commands;assembly=SwagOverFlow.WPF"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common"
             xmlns:sc="clr-namespace:SwagOverFlow.Clients;assembly=SwagOverFlow"
             mc:Ignorable="d" 
             x:Name="ThisControl"
             d:DesignHeight="450" d:DesignWidth="800">
    <swctl:SwagControlBase.Resources>
        <ContextMenu x:Key="GroupContextMenu" 
                     Tag="{Binding PlacementTarget,
                     RelativeSource={RelativeSource Self},
                     Converter={swui:AncestorFindConverter},
                     ConverterParameter={x:Type swctl:SwagItemsControl}}"
                     swcmd:CommandBehavior.Event="Opened"
                     swcmd:CommandBehavior.Command="{Binding Tag.ItemContextMenuOpenedCommand, RelativeSource={RelativeSource Self}}"
                     swcmd:CommandBehavior.CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add"
                      Visibility="{Binding Parent.Tag.ShowItemAddContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconEntypoKind.Plus}" />
                </MenuItem.Icon>
                <MenuItem Header="Group">
                    <MenuItem.Icon>
                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.TreeLeafThree}" />
                    </MenuItem.Icon>
                    <MenuItem Header="InstructionGroup" Tag="GRP_INS" Command="{Binding Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconRPGAwesomeKind.LightningTrio}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="ForEach Table" Tag="GRP_TBL" Command="{Binding Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Table}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Leaf">
                    <MenuItem.Icon>
                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.TreeLeaf}" />
                    </MenuItem.Icon>
                    <MenuItem Header="SQL">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
                        </MenuItem.Icon>
                        <MenuItem Header="Query" Tag="LF_QRY" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="SQL SP" Tag="LF_SQL_SP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseRun}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Web">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconWeatherIconsKind.Cloud}" />
                        </MenuItem.Icon>
                        <MenuItem Header="WebRequest" Tag="LF_WR_WRI" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconBoxIconsKind.RegularCloudLightning}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="WebRequest Group" Tag="LF_WR_WRGRP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconWeatherIconsKind.Thunderstorm}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Util">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconOcticonsKind.Tools}" />
                        </MenuItem.Icon>
                        <MenuItem Header="Set RunParams" Tag="LF_UT_SRP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconFeatherIconsKind.Tool}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Copy"
                          Command="{Binding Parent.Tag.CopyCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemCopyContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Clipboard}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste" 
                          Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.ClipboardPaste}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste As Template"
                          Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}"
                          Tag="TEMPLATE">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Shape}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" 
                      Command="{Binding Parent.Tag.RemoveCommand, RelativeSource={RelativeSource Self}}" 
                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding Parent.Tag.ShowItemRemoveContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialDesignKind.Clear}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="InstructionContextMenu"
                     Tag="{Binding PlacementTarget,
                     RelativeSource={RelativeSource Self},
                     Converter={swui:AncestorFindConverter},
                     ConverterParameter={x:Type swctl:SwagItemsControl}}"
                     swcmd:CommandBehavior.Event="Opened"
                     swcmd:CommandBehavior.Command="{Binding Tag.ItemContextMenuOpenedCommand, RelativeSource={RelativeSource Self}}"
                     swcmd:CommandBehavior.CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Copy"
                          Command="{Binding Parent.Tag.CopyCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemCopyContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Clipboard}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste" 
                          Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.ClipboardPaste}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Paste As Template"
                          Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.ShowItemPasteContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}"
                          Tag="TEMPLATE">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Shape}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" 
                      Command="{Binding Parent.Tag.RemoveCommand, RelativeSource={RelativeSource Self}}" 
                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding Parent.Tag.ShowItemRemoveContextMenuItem, RelativeSource={RelativeSource Self}, Converter={swui:BoolToVisibilityConverter}}">
                <MenuItem.Icon>
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialDesignKind.Clear}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <ControlTemplate x:Key="InstructionControlTemplate" TargetType="{x:Type ContentControl}">
            <Grid>
                <Grid>
                    <ContentPresenter />
                </Grid>
                <Button Visibility="{Binding ShowSaveButton, ElementName=ThisControl, Converter={swui:BoolToVisibilityConverter}}"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Click="SwagItemsControl_Save">
                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Save}" />
                </Button>
            </Grid>
        </ControlTemplate>
        <DataTemplate x:Key="ConditionHeaderDataTemplate">
            <swctl:IconControl Text="Condition" Kind="{x:Static iconPacks:PackIconJamIconsKind.Directions}" />
        </DataTemplate>
        <DataTemplate x:Key="ConditionDataTemplate">
            <swctl:BooleanExpressionControl ExpressionContainer="{Binding DataContext.Condition, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                                            ShowSaveContextMenuItem="True" 
                                            ShowAddContextMenuItem="True"
                                            ShowCopyContextMenuItem="True"
                                            ShowPasteContextMenuItem="True"
                                            ShowExportContextMenuItem="True"
                                            ShowImportContextMenuItem="True"
                                            ShowItemAddContextMenuItem="True"
                                            ShowItemRemoveContextMenuItem="True"
                                            Save="BooleanExpressionControl_Save">
            </swctl:BooleanExpressionControl>
        </DataTemplate>
        <DataTemplate x:Key="RequiredDataHeaderTemplate">
            <swctl:IconControl Text="Required Data" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseInformation}" />
        </DataTemplate>
        <DataTemplate x:Key="RequiredDataDataTemplate">
            <dwctl:SchemasControl Schemas="{Binding DataContext.RequiredData, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                                          Save="SchemasControl_Save">
            </dwctl:SchemasControl>
        </DataTemplate>
        <DataTemplate x:Key="GeneralHeaderTemplate">
            <swctl:IconControl Text="General" Kind="{x:Static iconPacks:PackIconMaterialKind.Cog}" />
        </DataTemplate>
        <ControlTemplate x:Key="GeneralFieldsControlTemplate" TargetType="{x:Type ContentControl}">
            <DockPanel>
                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Enabled  " VerticalAlignment="Center" />
                    <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding IsEnabled}" />
                    <swctl:IconControl Grid.Row="0" Grid.Column="2"  Text="  " Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaNBoxOutline}" />
                    <TextBox Grid.Row="0" Grid.Column="3"  Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="DoLog  " VerticalAlignment="Center" />
                    <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding DoLog}" />
                    <swctl:IconControl Grid.Row="1" Grid.Column="2"  Text="  " Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaLBoxOutline}" />
                    <TextBox Grid.Row="1" Grid.Column="3"  Text="{Binding LogPattern, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                    <ContentPresenter Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" />
                </Grid>
                <GroupBox>
                    <GroupBox.Header>
                        <swctl:IconControl Text="Description" Kind="{x:Static iconPacks:PackIconMaterialKind.Information}" />
                    </GroupBox.Header>
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Delay=250}" AcceptsReturn="True" AcceptsTab="True" />
                </GroupBox>
            </DockPanel>
        </ControlTemplate>
        <DataTemplate x:Key="AdvancedHeaderTemplate">
            <swctl:IconControl Text="Advanced" Kind="{x:Static iconPacks:PackIconFontAwesomeKind.CogsSolid}" />
        </DataTemplate>
        <DataTemplate x:Key="CacheHeaderTemplate">
            <swctl:IconControl Text="Cache" Kind="{x:Static iconPacks:PackIconMaterialKind.Cached}" />
        </DataTemplate>
        <ControlTemplate x:Key="CacheFieldsControlTemplate" TargetType="{x:Type ContentControl}">
            <StackPanel>
                <CheckBox IsChecked="{Binding CacheProperties.Enabled}" Content="Enabled" />
                <swctl:IconControl Text="AddressPattern" Kind="{x:Static iconPacks:PackIconIoniconsKind.PinMD}" />
                <TextBox Text="{Binding CacheProperties.AddressPattern, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                <swctl:IconControl Text="KeyPattern" Kind="{x:Static iconPacks:PackIconMaterialKind.Key}" />
                <TextBox Text="{Binding CacheProperties.KeyPattern, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                <swctl:IconControl Text="VersionPattern" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaVBoxOutline}" />
                <TextBox Text="{Binding CacheProperties.VersionPattern, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                <swctl:IconControl Text="ExpiresInMinutes" Kind="{x:Static iconPacks:PackIconMaterialKind.ClockOutline}" />
                <metro:NumericUpDown Value="{Binding CacheProperties.ExpiresInMinutes}" />
            </StackPanel>
        </ControlTemplate>
        <DataTemplate x:Key="QueryHeaderTemplate">
            <swctl:IconControl Text="Query" Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
        </DataTemplate>
        <ControlTemplate x:Key="QueryFieldControlTemplate" TargetType="{x:Type ContentControl}">
            <TextBox AcceptsReturn="True" AcceptsTab="True" Text="{Binding Query, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
        </ControlTemplate>
        <DataTemplate x:Key="OptionsHeaderTemplate">
            <swctl:IconControl Text="Options" Kind="{x:Static iconPacks:PackIconIoniconsKind.OptionsMD}" />
        </DataTemplate>
        <DataTemplate x:Key="OptionsDataTemplate">
            <swctl:SwagOptionControl 
                                ShowSaveContextMenuItem="True" 
                                ShowAddContextMenuItem="True"
                                ShowCopyContextMenuItem="True"
                                ShowPasteContextMenuItem="True"
                                ShowExportContextMenuItem="True"
                                ShowImportContextMenuItem="True"
                                ShowItemAddContextMenuItem="True"
                                ShowItemRemoveContextMenuItem="True"
                                OptionCollection="{Binding DataContext.Options, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                            Save="SwagOptionControl_Save">
            </swctl:SwagOptionControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:GroupInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding IsConcurrent}" Content="IsConcurrent" />
                            </StackPanel>
                        </ContentControl>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:ForEachTableGroupInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}">
                            <StackPanel>
                                <swctl:IconControl Text="DelayMinutes" Kind="{x:Static iconPacks:PackIconMaterialKind.Clock}" />
                                <metro:NumericUpDown Value="{Binding DelayMinutes}" />
                            </StackPanel>
                        </ContentControl>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource QueryHeaderTemplate}">
                        <ContentControl Template="{StaticResource QueryFieldControlTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:QueryInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}">
                            <StackPanel>
                                <swctl:IconControl Text="TargetTable" Kind="{x:Static iconPacks:PackIconMaterialKind.TableEye}" />
                                <TextBox Text="{Binding TargetTable, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            </StackPanel>
                        </ContentControl>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource CacheHeaderTemplate}">
                        <ContentControl Template="{StaticResource CacheFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource QueryHeaderTemplate}">
                        <ContentControl Template="{StaticResource QueryFieldControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource OptionsHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource OptionsDataTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate x:Key="SqlParamDataTemplate" DataType="{x:Type sc:SqlParam}">
            <StackPanel>
                <swctl:IconControl Text="Key" Kind="{x:Static iconPacks:PackIconMaterialKind.Key}" />
                <TextBox Text="{Binding Key, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                <swctl:IconControl Text="Value" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaVBoxOutline}" />
                <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=250}" AcceptsReturn="True" AcceptsTab="True" />
                <swctl:IconControl Text="Type" Kind="{x:Static iconPacks:PackIconMaterialKind.ShapeOutline}" />
                <ComboBox SelectedValue="{Binding Type}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sd:SqlDbType}}}" />
                <swctl:IconControl Text="Size" Kind="{x:Static iconPacks:PackIconMaterialKind.Counter}" />
                <metro:NumericUpDown Value="{Binding Size}" />
                <swctl:IconControl Text="Direction" Kind="{x:Static iconPacks:PackIconBoxIconsKind.SolidDirections}" />
                <ComboBox SelectedValue="{Binding Direction}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sd:ParameterDirection}}}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyValuePairDataTemplate">
            <StackPanel>
                <swctl:IconControl Text="Key" Kind="{x:Static iconPacks:PackIconMaterialKind.Key}" />
                <TextBox Text="{Binding Key, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                <swctl:IconControl Text="Value" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaVBoxOutline}" />
                <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:SqlExecSPInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl>
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource AdvancedHeaderTemplate}">
                        <DockPanel>
                            <swctl:IconControl DockPanel.Dock="Top" Text="DB Context" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseInformation}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding DBContext, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Stored Procedure" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseRun}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding StoredProcedure, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="TargetTable" Kind="{x:Static iconPacks:PackIconMaterialKind.TableEye}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding TargetTable, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="SQL Params" Kind="{x:Static iconPacks:PackIconUniconsKind.X}" />
                            <swctl:SwagItemsControl SwagItemsSource="{Binding SqlParams, Mode=TwoWay}" 
                                                    ShowImportContextMenuItem="True"
                                                    Import="SqlParams_Import"
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    <swui:SwagTemplate Type="{x:Type sc:SqlParam}" DataTemplate="{StaticResource SqlParamDataTemplate}" />
                                </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                            </swctl:SwagItemsControl>
                        </DockPanel>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource CacheHeaderTemplate}">
                        <ContentControl Template="{StaticResource CacheFieldsControlTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:WebRequestInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource AdvancedHeaderTemplate}">
                        <DockPanel>
                            <swctl:IconControl DockPanel.Dock="Top" Text="Schema" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseInformation}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding Schema, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Base URL" Kind="{x:Static iconPacks:PackIconPicolIconsKind.Website}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding BaseURL, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Request Path" Kind="{x:Static iconPacks:PackIconPicolIconsKind.Path}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding RequestPath, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Request Type" Kind="{x:Static iconPacks:PackIconUniconsKind.CloudInfo}" />
                            <ComboBox DockPanel.Dock="Top" SelectedValue="{Binding RequestType}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sc:WebRequestType}}}" />
                            <TabControl>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Headers" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaHBoxOutline}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding Headers, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Url Params" Kind="{x:Static iconPacks:PackIconMaterialKind.Equal}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding UrlParams, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Parameter Columns" Kind="{x:Static iconPacks:PackIconMaterialKind.TableColumnWidth}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding ParameterColumns, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Post" Kind="{x:Static iconPacks:PackIconMaterialKind.Post}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <DockPanel>
                                        <swctl:IconControl DockPanel.Dock="Top" Text="Content Type" Kind="{x:Static iconPacks:PackIconFontAwesomeKind.MailBulkSolid}" />
                                        <ComboBox DockPanel.Dock="Top" SelectedValue="{Binding PostContentType}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sc:WebRequestPostContentType}}}" />
                                        <TextBox Text="{Binding PostContent, UpdateSourceTrigger=PropertyChanged, Delay=250}" AcceptsReturn="True" AcceptsTab="True" />
                                    </DockPanel>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Misc" Kind="{x:Static iconPacks:PackIconMaterialKind.Information}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <StackPanel>
                                        <swctl:IconControl DockPanel.Dock="Top" Text="Limit Field" Kind="{x:Static iconPacks:PackIconEntypoKind.AlignTop}" />
                                        <TextBox DockPanel.Dock="Top" Text="{Binding LimitField, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                                        <swctl:IconControl DockPanel.Dock="Top" Text="Offset Field" Kind="{x:Static iconPacks:PackIconEntypoKind.AlignRight}" />
                                        <TextBox DockPanel.Dock="Top" Text="{Binding OffsetField, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                                        <swctl:IconControl DockPanel.Dock="Top" Text="PageField" Kind="{x:Static iconPacks:PackIconModernKind.TextAlignJustify}" />
                                        <TextBox DockPanel.Dock="Top" Text="{Binding PageField, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                                    </StackPanel>
                                </TabItem>
                            </TabControl>
                        </DockPanel>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource CacheHeaderTemplate}">
                        <ContentControl Template="{StaticResource CacheFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource OptionsHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource OptionsDataTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:ForEachTableWebRequestInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource AdvancedHeaderTemplate}">
                        <DockPanel>
                            <swctl:IconControl DockPanel.Dock="Top" Text="Schema" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseInformation}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding Schema, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Base URL" Kind="{x:Static iconPacks:PackIconPicolIconsKind.Website}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding BaseURL, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Request Path" Kind="{x:Static iconPacks:PackIconPicolIconsKind.Path}" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding RequestPath, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            <swctl:IconControl DockPanel.Dock="Top" Text="Request Type" Kind="{x:Static iconPacks:PackIconUniconsKind.CloudInfo}" />
                            <ComboBox DockPanel.Dock="Top" SelectedValue="{Binding RequestType}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sc:WebRequestType}}}" />
                            <TabControl>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Headers" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaHBoxOutline}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding Headers, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Url Params" Kind="{x:Static iconPacks:PackIconMaterialKind.Equal}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding UrlParams, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Parameter Columns" Kind="{x:Static iconPacks:PackIconMaterialKind.TableColumnWidth}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <swctl:SwagItemsControl SwagItemsSource="{Binding ParameterColumns, Mode=TwoWay}" 
                                                    UseDefaultAdd="True"
                                                    ShowAddContextMenuItem="True"
                                                    ShowItemAddContextMenuItem="True"
                                                    UseDefaultClear="True"
                                                    ShowClearContextMenuItem="True"
                                                    UseDefaultRemove="True"
                                                    ShowItemRemoveContextMenuItem="True"
                                                    MinHeight="30">
                                        <swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                            <swui:SwagTemplate DataTemplate="{StaticResource KeyValuePairDataTemplate}" />
                                        </swctl:SwagItemsControl.CustomDefaultItemTemplate>
                                    </swctl:SwagItemsControl>
                                </TabItem>
                                <TabItem>
                                    <TabItem.HeaderTemplate>
                                        <DataTemplate>
                                            <swctl:IconControl Text="Post" Kind="{x:Static iconPacks:PackIconMaterialKind.Post}" />
                                        </DataTemplate>
                                    </TabItem.HeaderTemplate>
                                    <DockPanel>
                                        <swctl:IconControl DockPanel.Dock="Top" Text="Content Type" Kind="{x:Static iconPacks:PackIconFontAwesomeKind.MailBulkSolid}" />
                                        <ComboBox DockPanel.Dock="Top" SelectedValue="{Binding PostContentType}" ItemsSource="{Binding Source={swui:EnumBindingSource {x:Type sc:WebRequestPostContentType}}}" />
                                        <TextBox Text="{Binding PostContent, UpdateSourceTrigger=PropertyChanged, Delay=250}" AcceptsReturn="True" AcceptsTab="True" />
                                    </DockPanel>
                                </TabItem>
                            </TabControl>
                        </DockPanel>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource CacheHeaderTemplate}">
                        <ContentControl Template="{StaticResource CacheFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource QueryHeaderTemplate}">
                        <ContentControl Template="{StaticResource QueryFieldControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource OptionsHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource OptionsDataTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:TemplateInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}">
                            <StackPanel>
                                <swctl:IconControl Text="Template Key" Kind="{x:Static iconPacks:PackIconMaterialKind.AlphaKBoxOutline}" />
                                <TextBox Text="{Binding TemplateKey, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
                            </StackPanel>
                        </ContentControl>
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource OptionsHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource OptionsDataTemplate}" />
                    </TabItem>
                    <TabItem>
                        <TabItem.HeaderTemplate>
                            <DataTemplate>
                                <swctl:IconControl Text="Template" Kind="{x:Static iconPacks:PackIconBoxIconsKind.SolidShapes}" />
                            </DataTemplate>
                        </TabItem.HeaderTemplate>
                        <dwctl:InstructionControl InstructionCollection="{Binding Template, Mode=TwoWay}">
                            
                        </dwctl:InstructionControl>
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type dc:SetRunParamsInstruction}">
            <ContentControl Template="{StaticResource InstructionControlTemplate}">
                <TabControl SelectedIndex="{Binding TabIndex, Mode=TwoWay}">
                    <TabItem HeaderTemplate="{StaticResource GeneralHeaderTemplate}">
                        <ContentControl Template="{StaticResource GeneralFieldsControlTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource ConditionHeaderDataTemplate}">
                        <ContentControl ContentTemplate="{StaticResource ConditionDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource RequiredDataHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource RequiredDataDataTemplate}" />
                    </TabItem>
                    <TabItem HeaderTemplate="{StaticResource OptionsHeaderTemplate}">
                        <ContentControl ContentTemplate="{StaticResource OptionsDataTemplate}" />
                    </TabItem>
                </TabControl>
            </ContentControl>
        </DataTemplate>
    </swctl:SwagControlBase.Resources>
    <DockPanel>
        <swctl:SwagItemsControl DockPanel.Dock="Left" MinWidth="30"
                            SwagItemsSource="{Binding InstructionCollection.Children, Converter={swui:CollectionToViewConverter Sort=Sequence}, ElementName=ThisControl}" 
                            Tag="{Binding ElementName=ThisControl}"
                            SelectedItem="{Binding SelectedInstruction, ElementName=ThisControl, Mode=TwoWay}"
                            AllowMove="{Binding AllowMove, ElementName=ThisControl}"
                            TreeViewItemDropPreview="SwagItemsControl_TreeViewItemDropPreview"
                            TreeViewItemLeavePreview="SwagItemsControl_TreeViewItemLeavePreview"
                            TreeViewItemDrop="SwagItemsControl_TreeViewItemDrop"
                            ShowSaveButton="{Binding ShowSaveButton, ElementName=ThisControl}"
                            ShowAddContextMenuItem="{Binding ShowAddContextMenuItem, ElementName=ThisControl}"
                            Save="SwagItemsControl_Save"
                            Add="SwagItemsControl_Add"
                            Copy="SwagItemsControl_Copy"
                            Paste="SwagItemsControl_Paste"
                            Export="SwagItemsControl_Export"
                            Import="SwagItemsControl_Import"
                            Remove="SwagItemsControl_Remove"
                            Clear="SwagItemsControl_Clear"
                            UseDefaultItemContextMenuOpened="True"
                            UseDefaultLevel="True"
                            ShowItemRemoveContextMenuItem="{Binding ShowItemRemoveContextMenuItem, ElementName=ThisControl}"
                            ShowItemAddContextMenuItem="{Binding ShowItemAddContextMenuItem, ElementName=ThisControl}"
                            ShowItemCopyContextMenuItem="{Binding ShowItemCopyContextMenuItem, ElementName=ThisControl}"
                            ShowItemPasteContextMenuItem="{Binding ShowItemPasteContextMenuItem, ElementName=ThisControl}"
                            SaveButtonHorizontalAlignment="Right"
                            SaveButtonVerticalAlignment="Bottom">
            <swctl:SwagItemsControl.ContextMenu>
                <!--PlacementTarget here is SwagItemsControl, PlacementTarget.Tag is ThisControl (InstructionControl)-->
                <ContextMenu DataContext="{Binding PlacementTarget.Tag.InstructionCollection, RelativeSource={RelativeSource Self}}" Tag="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Save"
                          Command="{Binding Parent.Tag.SaveCommand, RelativeSource={RelativeSource Self}}"
                          Visibility="{Binding Parent.Tag.Tag.ShowSaveContextMenuItem, Converter={swui:BoolToVisibilityConverter}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Save}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Add">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconEntypoKind.Plus}" />
                        </MenuItem.Icon>
                        <MenuItem Header="Group">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.TreeLeafThree}" />
                            </MenuItem.Icon>
                            <MenuItem Header="InstructionGroup" Tag="GRP_INS" Command="{Binding Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                <MenuItem.Icon>
                                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconRPGAwesomeKind.LightningTrio}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="ForEach Table" Tag="GRP_TBL" Command="{Binding Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                <MenuItem.Icon>
                                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Table}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="Leaf">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.TreeLeaf}" />
                            </MenuItem.Icon>
                            <MenuItem Header="SQL">
                                <MenuItem.Icon>
                                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
                                </MenuItem.Icon>
                                <MenuItem Header="Query" Tag="LF_QRY" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <MenuItem.Icon>
                                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="SQL SP" Tag="LF_SQL_SP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <MenuItem.Icon>
                                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseRun}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Web">
                                <MenuItem.Icon>
                                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconWeatherIconsKind.Cloud}" />
                                </MenuItem.Icon>
                                <MenuItem Header="WebRequest" Tag="LF_WR_WRI" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <MenuItem.Icon>
                                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconBoxIconsKind.RegularCloudLightning}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="WebRequest Group" Tag="LF_WR_WRGRP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <MenuItem.Icon>
                                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconWeatherIconsKind.Thunderstorm}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Util">
                                <MenuItem.Icon>
                                    <swctl:IconControl Kind="{x:Static iconPacks:PackIconOcticonsKind.Tools}" />
                                </MenuItem.Icon>
                                <MenuItem Header="Set RunParams" Tag="LF_UT_SRP" Command="{Binding Parent.Parent.Parent.Parent.Tag.AddCommand, RelativeSource={RelativeSource Self}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <MenuItem.Icon>
                                        <swctl:IconControl Kind="{x:Static iconPacks:PackIconFeatherIconsKind.Tool}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Level">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconEntypoKind.LevelDown}" />
                        </MenuItem.Icon>
                        <MenuItem Header="Collapse" Command="{Binding Parent.Parent.Tag.CollapseCommand, RelativeSource={RelativeSource Self}}"
                                  CommandParameter="{Binding Parent.Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconFontAwesomeKind.AngleDoubleUpSolid}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Set Expand Level">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconFontAwesomeKind.AngleDownSolid}" />
                            </MenuItem.Icon>
                            <MenuItem Header="1" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="1" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                            <MenuItem Header="2" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="2" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                            <MenuItem Header="3" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="3" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                            <MenuItem Header="4" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="4" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                            <MenuItem Header="5" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="5" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                            <MenuItem Header="6" Command="{Binding Parent.Parent.Parent.Tag.SetExpandLevelCommand, RelativeSource={RelativeSource Self}}" Tag="6" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                        </MenuItem>
                        <MenuItem Header="Expand" Command="{Binding Parent.Parent.Tag.ExpandCommand, RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconFontAwesomeKind.AngleDoubleDownSolid}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="AllowMove" IsCheckable="True" IsChecked="{Binding Parent.Tag.AllowMove, RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.CursorMove}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Debug">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.AndroidDebugBridge}" />
                        </MenuItem.Icon>
                        <MenuItem Header="ShowSequence" IsCheckable="True" IsChecked="{Binding Parent.Parent.Tag.Tag.ShowSequence, RelativeSource={RelativeSource Self}}">
                            <MenuItem.Icon>
                                <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.FormatListNumbered}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Copy"
                          Command="{Binding Parent.Tag.CopyCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                          Visibility="{Binding Parent.Tag.Tag.ShowCopyContextMenuItem, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.Clipboard}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Paste" 
                          Command="{Binding Parent.Tag.PasteCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                          Visibility="{Binding Parent.Tag.Tag.ShowPasteContextMenuItem, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconModernKind.ClipboardPaste}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Export" 
                          Command="{Binding Parent.Tag.ExportCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                          Visibility="{Binding Parent.Tag.Tag.ShowExportContextMenuItem, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Export}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Import"
                          Command="{Binding Parent.Tag.ImportCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                          Visibility="{Binding Parent.Tag.Tag.ShowImportContextMenuItem, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Import}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Clear" 
                          Command="{Binding Parent.Tag.ClearCommand, RelativeSource={RelativeSource Self}}" 
                          CommandParameter="{Binding Parent.PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                          Visibility="{Binding Parent.Tag.Expression.HasChildren, Converter={swui:BoolToVisibilityConverter}}">
                        <MenuItem.Icon>
                            <swctl:IconControl Kind="{x:Static iconPacks:PackIconMaterialDesignKind.Clear}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </swctl:SwagItemsControl.ContextMenu>
            <swctl:SwagItemsControl.ItemContainerStyles>
                <swui:SwagStyleCollection>
                    <swui:SwagStyle Type="{x:Type dc:GroupInstruction}">
                        <swui:SwagStyle.Style>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="ContextMenu" Value="{StaticResource GroupContextMenu}" />
                            </Style>
                        </swui:SwagStyle.Style>
                    </swui:SwagStyle>
                    <swui:SwagStyle Type="{x:Type dc:Instruction}">
                        <swui:SwagStyle.Style>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="ContextMenu" Value="{StaticResource InstructionContextMenu}" />
                            </Style>
                        </swui:SwagStyle.Style>
                    </swui:SwagStyle>
                </swui:SwagStyleCollection>
            </swctl:SwagItemsControl.ItemContainerStyles>
            <swctl:SwagItemsControl.ItemTemplates>
                <swui:SwagTemplateCollection>
                    <swui:SwagTemplate Type="{x:Type dc:ForEachTableGroupInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children, Converter={swui:CollectionToViewConverter Sort=Sequence}}">
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconMaterialKind.Table}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:GroupInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children, Converter={swui:CollectionToViewConverter Sort=Sequence}}">
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconRPGAwesomeKind.LightningTrio}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:QueryInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconModernKind.DatabaseSql}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:SqlExecSPInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconPicolIconsKind.DatabaseRun}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:ForEachTableWebRequestInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconWeatherIconsKind.Thunderstorm}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:WebRequestInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconBoxIconsKind.RegularCloudLightning}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:TemplateInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconBoxIconsKind.SolidShapes}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                    <swui:SwagTemplate Type="{x:Type dc:SetRunParamsInstruction}">
                        <swui:SwagTemplate.DataTemplate>
                            <DataTemplate>
                                <Grid>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Sequence}" VerticalAlignment="Center" DockPanel.Dock="Left" Visibility="{Binding ShowSequence, Converter={swui:BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dwctl:InstructionControl}}}" />
                                        <swctl:IconControl Text="{Binding Name}" Kind="{x:Static iconPacks:PackIconFeatherIconsKind.Tool}" />
                                    </DockPanel>
                                    <Rectangle Fill="Gray" Opacity=".5" Visibility="{Binding IsEnabled, Converter={swui:BoolToVisibilityConverter TrueValue=Collapsed,FalseValue=Visible}}" />
                                </Grid>
                            </DataTemplate>
                        </swui:SwagTemplate.DataTemplate>
                    </swui:SwagTemplate>
                </swui:SwagTemplateCollection>
            </swctl:SwagItemsControl.ItemTemplates>
        </swctl:SwagItemsControl>
        <ContentControl MinWidth="60" BorderThickness="3" BorderBrush="Black" Content="{Binding SelectedInstruction, ElementName=ThisControl}">

        </ContentControl>
    </DockPanel>
</swctl:SwagControlBase>
