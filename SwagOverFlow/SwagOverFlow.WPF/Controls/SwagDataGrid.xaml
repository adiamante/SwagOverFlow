<local:SwagControlBase x:Class="SwagOverFlow.WPF.Controls.SwagDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:swui="clr-namespace:SwagOverFlow.WPF.UI"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:cmd="clr-namespace:SwagOverFlow.WPF.Commands"
             xmlns:svm="clr-namespace:SwagOverFlow.ViewModels;assembly=SwagOverFlow"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:SwagOverFlow.WPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="SwagDataGridInstance_Loaded"
             x:Name="SwagDataGridInstance">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SwagOverFlow.WPF;component/Themes/Common.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <swui:SwagColumnConverter x:Key="SwagColumnConverter" />
            <swui:MultiBoolToBoolConverter x:Key="MultiBoolToBoolConverter" />
            <swui:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" FalseValue="Collapsed" />
            <ContextMenu x:Key="SwagColumnHeaderContextMenu">
                <MenuItem Header="Clear Filter" Command="{Binding ClearFilterCommand}">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.FilterMinus}}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Rename" StaysOpenOnClick="True">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.Rename}}" />
                    </MenuItem.Icon>
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.KeyboardOutline}}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <Grid x:Name="gridRename">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Row="0" Grid.Column="0" Text="{Binding ColumnName, Mode=OneWay}" Loaded="SwagColumnHeader_TextBoxLoad" KeyDown="SwagColumnHeader_TextBoxKeyDown" MinWidth="100" />
                                <Button Grid.Row="1" Grid.Column="0" Content="Rename" Click="SwagColumnHeader_RenameClick" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Convert" StaysOpenOnClick="True">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.Convert}}" />
                    </MenuItem.Icon>
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Tune}}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <Grid x:Name="gridConvertOptions">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="KeepOriginal" />
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Default:" />
                                <TextBox Grid.Row="3" Grid.Column="0" MinWidth="100" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="Integer" Tag="{x:Type sys:Int32}" Click="SwagColumnHeader_ConvertClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Numeric}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Decimal" Tag="{x:Type sys:Decimal}" Click="SwagColumnHeader_ConvertClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.Decimal}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="DateTime" Tag="{x:Type sys:DateTime}" Click="SwagColumnHeader_ConvertClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Calendar}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="TimeSpan" Tag="{x:Type sys:TimeSpan}" Click="SwagColumnHeader_ConvertClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ClockOutline}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="String" Tag="{x:Type sys:String}" Click="SwagColumnHeader_ConvertClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AlphaSBoxOutline}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Move">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.DragVariant}}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Left 1" Tag="-1" Click="SwagColumnHeader_MoveClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ChevronLeft}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Right 1" Tag="1" Click="SwagColumnHeader_MoveClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ChevronRight}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Left Edge" Tag="-1000000" Click="SwagColumnHeader_MoveClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ChevronTripleLeft}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Right Edge" Tag="1000000" Click="SwagColumnHeader_MoveClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ChevronTripleRight}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Fill Empty">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ViewDashboard}}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Default" Tag="Default" Click="SwagColumnHeader_FillEmptyDefaultClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Origin}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.KeyboardOutline}}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <Grid x:Name="gridFillEmptyInput">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Row="0" Grid.Column="0" Loaded="SwagColumnHeader_TextBoxLoad" KeyDown="SwagColumnHeader_TextBoxKeyDown" MinWidth="100" />
                                <Button Grid.Row="1" Grid.Column="0" Content="Fill" Click="SwagColumnHeader_FillEmptyInputClick" />
                            </Grid>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="ShowTotals" IsChecked="{Binding SwagDataTable.ShowColumnTotals}" Command="{Binding SwagDataTable.ToggleShowColumnTotalsCommand}">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Sigma}}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Options">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Tools}}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Select All Column Values" Click="SwagColumnHeader_SelectColumnValueClick">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.SelectGroup}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Reset Columns" Command="{Binding SwagDataTable.ResetColumnsCommand}">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Refresh}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Debug" IsChecked="{Binding SwagDataTable.ShowDebug}" Command="{Binding SwagDataTable.ToggleShowDebugCommand}">
                        <MenuItem.Icon>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AndroidDebugBridge}}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Hide" Command="{Binding HideCommand}">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.EyeOff}}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Remove" Command="{Binding RemoveCommand}">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.TableColumnRemove}}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
            <ContextMenu x:Key="SwagDataColumnContextMenu">
                <MenuItem Header="View" Click="SwagDataColumn_ViewClick">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Eye}}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
            <Style x:Key="SwagColumnHeaderStyle" 
                   TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                <Setter Property="BorderThickness" Value="0 0 0 3" />
                <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal" />
                <!--<Setter Property="Cursor" Value="Hand" />-->
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Padding" Value="{Binding Path=(metro:DataGridHelper.ColumnHeaderPadding), Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid ContextMenu="{StaticResource SwagColumnHeaderContextMenu}">
                                <Grid.DataContext>
                                    <MultiBinding Converter="{StaticResource SwagColumnConverter}" Mode="OneTime">
                                        <Binding RelativeSource="{RelativeSource AncestorType=local:SwagDataGrid, Mode=FindAncestor}" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="DataContext" />
                                    </MultiBinding>
                                </Grid.DataContext>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder"
                                    Grid.ColumnSpan="3"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <metro:ContentControlEx x:Name="HeaderContent"
                                                   Grid.Column="0"
                                                   Margin="{TemplateBinding BorderThickness}"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(metro:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Grid Grid.Column="1">
                                        <ToggleButton x:Name="tbColumnFilter" Margin="{TemplateBinding BorderThickness}"
                                                   Padding="0,0,4,0">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
                                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.BlackColor}" />
                                                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
                                                    <Setter Property="IsChecked" Value="{Binding IsColumnFilterOpen}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasAppliedFilter}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsColumnFilterOpen}" Value="True" />
                                                                <Condition Binding="{Binding HasAppliedFilter}" Value="True"  />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.GrayNormal}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                            <local:IconControl Padding="0,0,0,0" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Filter}}" />
                                        </ToggleButton>
                                        <Popup StaysOpen="False" IsOpen="{Binding IsColumnFilterOpen}"
                                            PlacementTarget="{Binding ElementName=tbColumnFilter}" PopupAnimation="Slide" 
                                            x:Name="puPopup">
                                            <ContentPresenter>
                                                <ContentPresenter.ContentTemplate>
                                                    <DataTemplate>
                                                        <Border Background="{DynamicResource MahApps.Brushes.Control.Background}" BorderThickness="3" BorderBrush="{StaticResource MahApps.Brushes.Gray5}" MinWidth="150">
                                                            <DockPanel MaxHeight="400">
                                                                <DockPanel.DataContext>
                                                                    <MultiBinding Converter="{StaticResource SwagColumnConverter}" Mode="OneTime">
                                                                        <Binding RelativeSource="{RelativeSource AncestorType=local:SwagDataGrid, Mode=FindAncestor}" />
                                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="DataContext" />
                                                                    </MultiBinding>
                                                                </DockPanel.DataContext>
                                                                <Button DockPanel.Dock="Top" Margin="3" Padding="0" Height="20" Command="{Binding ClearFilterCommand}">
                                                                    <local:IconControl Padding="0,0,0,0" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.FilterMinus}}" />
                                                                </Button>
                                                                <local:SearchTextBox DockPanel.Dock="Top"
                                                                             LabelText="Search Column"
                                                                             Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                             cmd:CommandBehavior.Event="Search"
                                                                             cmd:CommandBehavior.Command="{Binding ApplySearchFilterCommand}"
                                                                             FilterMode="{Binding SearchFilterMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                                                <Expander Header="List">
                                                                    <DockPanel>
                                                                        <local:SearchTextBox DockPanel.Dock="Top"
                                                                             LabelText="Search List"
                                                                             Text="{Binding ListValuesFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                             cmd:CommandBehavior.Event="Search"
                                                                             cmd:CommandBehavior.Command="{Binding ApplyListValuesFilterCommand}"
                                                                             FilterMode="{Binding ListValuesFilterMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                                                        <Button DockPanel.Dock="Top" Margin="3" Command="{Binding ApplyListFilterCommand}">
                                                                            <local:IconControl Text="Apply" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Play}}" />
                                                                        </Button>
                                                                        <CheckBox DockPanel.Dock="Top" Padding="3" Margin="6,0,0,0" Content="Show All" IsChecked="{Binding ShowAllDistinctValues}" />
                                                                        <ListView DockPanel.Dock="Top" Padding="3" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                                            <ListView.ItemContainerStyle>
                                                                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                                </Style>
                                                                            </ListView.ItemContainerStyle>
                                                                            <ListViewItem>
                                                                                <CheckBox HorizontalContentAlignment="Stretch" IsChecked="{Binding ListCheckAll}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="*" />
                                                                                            <ColumnDefinition Width="Auto" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <TextBlock Grid.Column="0" Text="All" />
                                                                                        <TextBlock Grid.Column="1" HorizontalAlignment="Right" Text="{Binding SwagDataTable.DataTable.Rows.Count, StringFormat={}({0})}" />
                                                                                    </Grid>
                                                                                </CheckBox>
                                                                            </ListViewItem>
                                                                        </ListView>
                                                                        <ListView ItemsSource="{Binding DistinctValues, Mode=OneTime}"
                                                                              VirtualizingPanel.IsVirtualizing="True"
                                                                              VirtualizingPanel.VirtualizationMode="Recycling"
                                                                              ScrollViewer.CanContentScroll="True">
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <VirtualizingStackPanel IsItemsHost="True"/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                            <ListView.Template>
                                                                                <ControlTemplate TargetType="{x:Type ListView}">
                                                                                    <ScrollViewer Focusable="False" CanContentScroll="True" Padding="3">
                                                                                        <ItemsPresenter HorizontalAlignment="Stretch"/>
                                                                                    </ScrollViewer>
                                                                                </ControlTemplate>
                                                                            </ListView.Template>
                                                                            <ListView.ItemContainerStyle>
                                                                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                                </Style>
                                                                            </ListView.ItemContainerStyle>
                                                                            <ListView.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <Grid HorizontalAlignment="Stretch">
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="Auto" />
                                                                                            <ColumnDefinition Width="*" />
                                                                                            <ColumnDefinition Width="Auto" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <CheckBox Grid.Column="0" IsChecked="{Binding Value.IsChecked}" />
                                                                                        <TextBlock Grid.Column="1" Text="{Binding Value.Value}" />
                                                                                        <TextBlock Grid.Column="2" HorizontalAlignment="Right" Text="{Binding Value.Count, StringFormat={}({0})}" />
                                                                                    </Grid>
                                                                                </DataTemplate>
                                                                            </ListView.ItemTemplate>
                                                                        </ListView>
                                                                    </DockPanel>
                                                                </Expander>
                                                            </DockPanel>
                                                        </Border>
                                                    </DataTemplate>
                                                </ContentPresenter.ContentTemplate>
                                            </ContentPresenter>
                                        </Popup>
                                    </Grid>

                                    <Path x:Name="SortArrow"
                                  Grid.Column="2"
                                  Width="8"
                                  Height="10"
                                  Margin="0 0 8 2"
                                  VerticalAlignment="Center"
                                  Fill="{DynamicResource MahApps.Brushes.Gray2}"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />

                                    <Thumb x:Name="PART_LeftHeaderGripper"
                                   Grid.Column="0"
                                   HorizontalAlignment="Left"
                                   Background="Transparent"
                                   Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}" />

                                    <Thumb x:Name="PART_RightHeaderGripper"
                                   Grid.Column="2"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}" />

                                </Grid>
                                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding SwagDataTable.ShowColumnTotals, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                                    <local:IconControl Text="{Binding Total, StringFormat=N}" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Sigma}}" />
                                </Grid>
                                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding SwagDataTable.ShowDebug, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                                    <GroupBox>
                                        <GroupBox.Header>
                                            <local:IconControl Text="Debug" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AndroidDebugBridge}}" />
                                        </GroupBox.Header>
                                        <StackPanel>
                                            <local:IconControl Text="{Binding DataType}" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ShapeOutline}}" />
                                            <local:IconControl Text="{Binding ColSeq}" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Numeric}}" />
                                        </StackPanel>
                                    </GroupBox>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                                    <Setter TargetName="SortArrow" Property="Margin" Value="0 0 8 0" />
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="DisplayIndex" Value="0">
                                    <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                            <Condition Property="SortDirection" Value="{x:Null}" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type ContentControl}">
                <GroupBox Header="{Binding Display}" MinWidth="150">
                    <GroupBox.Content>
                        <ContentPresenter />
                    </GroupBox.Content>
                </GroupBox>
            </ControlTemplate>
            <ContextMenu x:Key="SwagDataResultContextMenu" Opened="Search_ResultGo_Opened">
                <MenuItem Click="Search_ResultGo_Click" Header="View">
                    <MenuItem.Icon>
                        <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Eye}}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid DataContext="{Binding ElementName=SwagDataGridInstance}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <local:SwagSidePanelControl Grid.Row="0" Grid.Column="0" SwagTabCollection="{Binding SwagDataTable.Tabs, ElementName=SwagDataGridInstance}">
                <local:SwagSidePanelControl.TabItemTemplates>
                    <swui:SwagTemplateCollection>
                        <swui:SwagTemplate CompareValue="ColumnEditor/Visibility">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <DockPanel>
                                            <local:SearchTextBox DockPanel.Dock="Top" 
                                                                 Text="{Binding ViewModel.Settings[ColumnEditor][Visibility][Search][Text].Value, Delay=250, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 FilterMode="{Binding ViewModel.Settings[ColumnEditor][Visibility][Search][FilterMode].Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 SearchMode="Instant"
                                                                 MinWidth="100"
                                                                 cmd:CommandBehavior.Event="Search"
                                                                 cmd:CommandBehavior.Command="{Binding ViewModel.ApplyColumnVisibilityFilterCommand}"/>
                                            <Button DockPanel.Dock="Top" Command="{Binding ViewModel.ApplyColumnVisibilityCommand}">
                                                <local:IconControl Text="Apply" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.PlayOutline}}" />
                                            </Button>
                                            <ListView DockPanel.Dock="Top" Padding="3" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListViewItem>
                                                    <CheckBox HorizontalContentAlignment="Stretch" IsChecked="{Binding ViewModel.ColumnVisibilityCheckAll}">
                                                        <TextBlock Grid.Column="0" Text="All" />
                                                    </CheckBox>
                                                </ListViewItem>
                                            </ListView>
                                            <ListView ItemsSource="{Binding ViewModel.ColumnsVisibilityView}">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                        <Setter Property="ContextMenu" Value="{StaticResource SwagDataColumnContextMenu}">
                                                        </Setter>
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding Value.IsCheckedVisibility, Mode=TwoWay}">
                                                            <local:IconControl Text="{Binding Key}" Kind="{Binding Source={x:Static swui:PackIconCustomKind.TableColumn}}" />
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </DockPanel>
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <swui:SwagTemplate CompareValue="ColumnEditor/Filters">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <DockPanel>
                                            <local:SearchTextBox DockPanel.Dock="Top" 
                                                                 Text="{Binding ViewModel.Settings[ColumnEditor][Filters][Search][Text].Value, Delay=250, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 FilterMode="{Binding ViewModel.Settings[ColumnEditor][Filters][Search][FilterMode].Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 SearchMode="Instant"
                                                                 MinWidth="100"
                                                                 cmd:CommandBehavior.Event="Search"
                                                                 cmd:CommandBehavior.Command="{Binding ViewModel.ApplyColumnFiltersFilterCommand}"/>
                                            <Button DockPanel.Dock="Top" Command="{Binding ViewModel.ClearColumnFiltersCommand}">
                                                <local:IconControl Text="Clear" Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Cancel}}" />
                                            </Button>
                                            <ListView DockPanel.Dock="Top" Padding="3" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListViewItem>
                                                    <CheckBox HorizontalContentAlignment="Stretch" IsChecked="{Binding ViewModel.ColumnFiltersCheckAll}">
                                                        <TextBlock Grid.Column="0" Text="All" />
                                                    </CheckBox>
                                                </ListViewItem>
                                            </ListView>
                                            <ListView ItemsSource="{Binding ViewModel.ColumnsFilterView}">
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                        <Setter Property="ContextMenu" Value="{StaticResource SwagDataColumnContextMenu}" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding Value.IsCheckedFilter, Mode=TwoWay}">
                                                            <DockPanel>
                                                                <local:IconControl DockPanel.Dock="Left" Text="{Binding Key, StringFormat={}{0}:}" Kind="{Binding Source={x:Static swui:PackIconCustomKind.Filter}}" />
                                                                <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="{Binding Value.AppliedFilter}" />
                                                            </DockPanel>
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </DockPanel>
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <!--<swui:SwagTemplate CompareValue="ColumnEditor/Add">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <TextBlock Text="Placeholder" />
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <swui:SwagTemplate CompareValue="ColumnEditor/View">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <TextBlock Text="Placeholder" />
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>-->
                        <swui:SwagTemplate CompareValue="Search">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <DockPanel>
                                            <local:SearchTextBox DockPanel.Dock="Top" 
                                                                 Text="{Binding ViewModel.Settings[Search][Text].Value, Delay=250, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 FilterMode="{Binding ViewModel.Settings[Search][FilterMode].Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                                 SearchMode="Delayed"
                                                                 MinWidth="100"
                                                                 Search="Search_OnSearch"/>
                                            <local:SwagItemsControl SwagItemsSource="{Binding ViewModel.SwagDataResult.Children}">
                                                <local:SwagItemsControl.CustomDefaultItemTemplate>
                                                    <swui:SwagTemplate>
                                                        <swui:SwagTemplate.DataTemplate>
                                                            <HierarchicalDataTemplate ItemsSource="{Binding ChildrenView}">
                                                                <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.Dataset}}" Text="{Binding Display}" />
                                                            </HierarchicalDataTemplate>
                                                        </swui:SwagTemplate.DataTemplate>
                                                    </swui:SwagTemplate>
                                                </local:SwagItemsControl.CustomDefaultItemTemplate>
                                                <local:SwagItemsControl.ItemTemplates>
                                                    <swui:SwagTemplateCollection>
                                                        <swui:SwagTemplate Type="{x:Type svm:SwagDataTableResultGroup}">
                                                            <swui:SwagTemplate.DataTemplate>
                                                                <HierarchicalDataTemplate ItemsSource="{Binding ChildrenView}">
                                                                    <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.Table}}" Text="{Binding Display}" />
                                                                </HierarchicalDataTemplate>
                                                            </swui:SwagTemplate.DataTemplate>
                                                        </swui:SwagTemplate>
                                                        <swui:SwagTemplate Type="{x:Type svm:SwagDataColumnResultGroup}">
                                                            <swui:SwagTemplate.DataTemplate>
                                                                <HierarchicalDataTemplate ItemsSource="{Binding ChildrenView}">
                                                                    <local:IconControl Kind="{Binding Source={x:Static swui:PackIconCustomKind.TableColumn}}" Text="{Binding Display}" />
                                                                </HierarchicalDataTemplate>
                                                            </swui:SwagTemplate.DataTemplate>
                                                        </swui:SwagTemplate>
                                                        <swui:SwagTemplate Type="{x:Type svm:SwagDataRowResult}">
                                                            <swui:SwagTemplate.DataTemplate>
                                                                <DataTemplate>
                                                                    <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.TableRow}}" Text="{Binding Display}" />
                                                                </DataTemplate>
                                                            </swui:SwagTemplate.DataTemplate>
                                                        </swui:SwagTemplate>
                                                    </swui:SwagTemplateCollection>
                                                </local:SwagItemsControl.ItemTemplates>
                                                <local:SwagItemsControl.CustomDefaultItemContainerStyle>
                                                    <swui:SwagStyle>
                                                        <swui:SwagStyle.Style>
                                                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                                                <Setter Property="HorizontalAlignment" Value="Left" />
                                                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                                                <Setter Property="ContextMenu" Value="{StaticResource SwagDataResultContextMenu}" />
                                                            </Style>
                                                        </swui:SwagStyle.Style>
                                                    </swui:SwagStyle>
                                                </local:SwagItemsControl.CustomDefaultItemContainerStyle>
                                            </local:SwagItemsControl>
                                        </DockPanel>
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <swui:SwagTemplate CompareValue="Import">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <DockPanel>
                                            <local:SettingsControl DockPanel.Dock="Top" Settings="{Binding ViewModel.Settings[Import]}" />
                                            <Button Command="{Binding ViewModel.ImportCommand}" Content="Import!">
                                                <Button.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Click="Import_Paste_Click" Header="Paste">
                                                            <MenuItem.Icon>
                                                                <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.ContentPaste}}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Button.ContextMenu>
                                            </Button>
                                        </DockPanel>
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <swui:SwagTemplate CompareValue="Export">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <DockPanel>
                                            <local:SettingsControl DockPanel.Dock="Top" Settings="{Binding ViewModel.Settings[Export]}" />
                                            <Button Command="{Binding ViewModel.ExportCommand}">Export!</Button>
                                        </DockPanel>
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                        <swui:SwagTemplate CompareValue="Settings">
                            <swui:SwagTemplate.DataTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource TabItemTemplate}">
                                        <local:SettingsControl Settings="{Binding ViewModel.Settings}" />
                                    </ContentControl>
                                </DataTemplate>
                            </swui:SwagTemplate.DataTemplate>
                        </swui:SwagTemplate>
                    </swui:SwagTemplateCollection>
                </local:SwagSidePanelControl.TabItemTemplates>
                <local:SwagSidePanelControl.BottomContentTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AlphaCBoxOutline}}" />
                            <TextBlock Text="{Binding SwagDataTable.ColumnCount, RelativeSource={RelativeSource AncestorType={x:Type local:SwagDataGrid}, Mode=FindAncestor}}" />
                            <local:IconControl Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AlphaRBoxOutline}}" />
                            <TextBlock Text="{Binding SwagDataTable.RowCount, RelativeSource={RelativeSource AncestorType={x:Type local:SwagDataGrid}, Mode=FindAncestor}}" />
                        </StackPanel>
                    </DataTemplate>
                </local:SwagSidePanelControl.BottomContentTemplate>
            </local:SwagSidePanelControl>
            <DataGrid x:Name="DataGrid" 
                      Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                      SelectionMode="Extended"
                      SelectionUnit="CellOrRowHeader"
                      CanUserAddRows="False"
                      CanUserSortColumns="False"
                      AutoGenerateColumns="False"
                      ItemsSource="{Binding SwagDataTable.DataTable.DefaultView}"
                      ColumnHeaderStyle="{StaticResource SwagColumnHeaderStyle}"
                      ColumnReordered="DataGrid_ColumnReordered"
                      SelectedCellsChanged="DataGrid_SelectedCellsChanged">
                <DataGrid.Style>
                    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                        <Setter Property="AlternatingRowBackground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="ToolTipService.IsEnabled" Value="False" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="ToolTipService.IsEnabled" Value="True" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </Style.Triggers>
                        <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SwagDataGrid}}}" />
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={x:Static RelativeSource.Self}}">
                                    <StackPanel>
                                        <local:IconControl Text="{Binding SelectedTotal, StringFormat=N}"
                                                       Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.Sigma}}" />
                                        <local:IconControl Text="{Binding SelectedCount, StringFormat=D}"
                                                       Kind="{Binding Source={x:Static iconPacks:PackIconMaterialKind.AlphaNBoxOutline}}" />
                                    </StackPanel>
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </Grid>
    </Grid>
</local:SwagControlBase>
