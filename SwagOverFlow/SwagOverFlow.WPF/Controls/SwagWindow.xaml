<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:controls="clr-namespace:SwagOverFlow.WPF.Controls"
                    xmlns:local="clr-namespace:SwagOverFlow.WPF"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:ui="clr-namespace:SwagOverFlow.WPF.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SwagOverFlow.WPF;component/Themes/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type controls:SwagWindow}" BasedOn="{StaticResource {x:Type metro:MetroWindow}}">
        <Setter Property="DataContext">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Mode=Self}" />
            </Setter.Value>
        </Setter>
        <Setter Property="RightWindowCommands">
            <Setter.Value>
                <metro:WindowCommands>
                    <ToggleButton IsChecked="{Binding Settings[Window][CommandHistory][IsOpen].Value}">
                        <controls:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.History}" />
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding Settings[Window][Settings][IsOpen].Value}">
                        <controls:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Cog}" />
                    </ToggleButton>
                </metro:WindowCommands>
            </Setter.Value>
        </Setter>
        <Setter Property="Flyouts">
            <Setter.Value>
                <metro:FlyoutsControl>
                    <metro:Flyout IsOpen="{Binding Settings[Window][CommandHistory][IsOpen].Value}" Position="Right" Theme="Accent">
                        <metro:Flyout.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:IconControl Text="Commands" Kind="{x:Static iconPacks:PackIconMaterialKind.History}" />
                            </StackPanel>
                        </metro:Flyout.Header>
                        <GroupBox>
                            <GroupBox.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="History" Foreground="{DynamicResource MahApps.Brushes.SystemControlForegroundChromeWhite}" />
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Command="{Binding CommandManager.UndoCommand}">
                                            <controls:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Undo}" />
                                        </Button>
                                        <Button Command="{Binding CommandManager.RedoCommand}">
                                            <controls:IconControl Kind="{x:Static iconPacks:PackIconMaterialKind.Redo}" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </GroupBox.Header>
                            <DockPanel>
                                <ListView DockPanel.Dock="Top" VerticalAlignment="Top" ItemsSource="{Binding CommandManager.CommandHistory}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Display}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <Separator DockPanel.Dock="Top" />
                                <ListView VerticalAlignment="Top" ItemsSource="{Binding CommandManager.UndoHistory}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Display}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </DockPanel>
                        </GroupBox>
                    </metro:Flyout>
                    <metro:Flyout IsOpen="{Binding Settings[Window][Settings][IsOpen].Value}" Position="Right" Theme="Accent">
                        <metro:Flyout.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:IconControl Text="Settings" Kind="{x:Static iconPacks:PackIconMaterialKind.Cog}" />
                            </StackPanel>
                        </metro:Flyout.Header>
                        <controls:SettingsControl Settings="{Binding Settings}" SettingCustomTemplates="{Binding SettingCustomTemplates}" />
                    </metro:Flyout>
                </metro:FlyoutsControl>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom" >
                            <StatusBar Style="{StaticResource MahApps.Styles.StatusBar}">
                                <TextBlock Text="{Binding Settings[Window][Status][Message].Value, RelativeSource={RelativeSource AncestorType={x:Type controls:SwagWindow}}}" />
                            </StatusBar>
                            <metro:MetroProgressBar IsIndeterminate="{Binding Settings[Window][Status][IsBusy].Value, RelativeSource={RelativeSource AncestorType={x:Type controls:SwagWindow}}}" />
                        </Grid>
                        <Grid>
                            <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type controls:SwagWindow}}}" />
                            <metro:ProgressRing IsActive="{Binding Settings[Window][Status][IsBusy].Value, RelativeSource={RelativeSource AncestorType={x:Type controls:SwagWindow}}}" />
                        </Grid>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>