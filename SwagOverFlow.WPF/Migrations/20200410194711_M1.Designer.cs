// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwagOverflow.WPF.Data;

namespace SwagOverflow.WPF.Migrations
{
    [DbContext(typeof(SwagContext))]
    [Migration("20200410194711_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagItemBase", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CanUndo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Display")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExpanded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueTypeString")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("AlternateId")
                        .IsUnique();

                    b.ToTable("SwagItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SwagItemBase");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagDataRow", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagItemBase");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("SwagDataRow");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagSetting", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagItemBase");

                    b.Property<string>("IconString")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconTypeString")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemsSourceTypeString")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjItemsSource")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnName("SwagSetting_ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SettingType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("SwagSetting");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagTabItem", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagItemBase");

                    b.Property<string>("IconString")
                        .HasColumnName("SwagTabItem_IconString")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconTypeString")
                        .HasColumnName("SwagTabItem_IconTypeString")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnName("SwagTabItem_ParentId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("SwagTabItem");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagDataTable", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagDataRow");

                    b.Property<string>("Columns")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Listening")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SettingsItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TabsItemId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SettingsItemId");

                    b.HasIndex("TabsItemId");

                    b.HasDiscriminator().HasValue("SwagDataTable");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagSettingBoolean", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagSetting");

                    b.HasDiscriminator().HasValue("SwagSettingBoolean");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagSettingGroup", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagSetting");

                    b.Property<string>("Name")
                        .HasColumnName("SwagSettingGroup_Name")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("SwagSettingGroup");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagSettingString", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagSetting");

                    b.HasDiscriminator().HasValue("SwagSettingString");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagTabCollection", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagTabItem");

                    b.Property<bool>("IsInitialized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelectedIndex")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowChildText")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("SwagTabCollection");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagWindowSettingGroup", b =>
                {
                    b.HasBaseType("SwagOverflow.WPF.ViewModels.SwagSettingGroup");

                    b.HasDiscriminator().HasValue("SwagWindowSettingGroup");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagDataRow", b =>
                {
                    b.HasOne("SwagOverflow.WPF.ViewModels.SwagDataTable", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagSetting", b =>
                {
                    b.HasOne("SwagOverflow.WPF.ViewModels.SwagSettingGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagTabItem", b =>
                {
                    b.HasOne("SwagOverflow.WPF.ViewModels.SwagTabCollection", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("SwagOverflow.WPF.ViewModels.SwagDataTable", b =>
                {
                    b.HasOne("SwagOverflow.WPF.ViewModels.SwagSettingGroup", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsItemId");

                    b.HasOne("SwagOverflow.WPF.ViewModels.SwagTabCollection", "Tabs")
                        .WithMany()
                        .HasForeignKey("TabsItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
